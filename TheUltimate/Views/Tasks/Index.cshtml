@using TheUltimate.Domain.Model
@model IEnumerable<TheUltimate.Domain.Model.Task>

@{
    ViewBag.Title = "myTasks";
}

@section ExtraStyles {
    @Styles.Render("~/Content/themes/base/css/jqueryconsole")
}

@section Title{
 <h1 id="page-title"><span class="my">my</span>tasks</h1>   
}

<!--p>
    @Html.ActionLink("Create New", "Create")
</p-->
<ul id="tasks">

@foreach (var item in Model) {
    <li id="task-number-@item.Number" class="@if (item.Status == Status.Completed)
                                            {
                                                <text>completed-task</text>
                                            }">
        <span class="task-number">
            #@Html.DisplayFor(modelItem => item.Number)
        </span>
        <span class="task-name">
            @Html.DisplayFor(modelItem => item.Name)
        </span>
        <span class="task-description">
            @Html.DisplayFor(modelItem => item.Description)
        </span>
        @{/*<td>
          @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
          @Html.ActionLink("Details", "Details", new { id=item.Id }) |
          @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>*/
         }
    </li>
}

</ul>
<div class="toolbar">
    <div class="toolbar-title">SkyNet</div>
    <div class="avatar"></div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var updateUi = function(command) {
                if (command.Verb == "create new task" || command.Verb == "new task") {
                    $("#tasks").append('<li id="task-number-' + command.AffectedTask.Number + '" style="display:none;"><span class="task-number">#' + command.AffectedTask.Number + '</span><span class="task-name">' + command.AffectedTask.Name + '</span><span class="task-description"></span></li>');
                    $("#tasks").find("li:last").fadeIn();
                }
                else if (command.Verb == "complete task" || command.Verb == "complete") {
                    // find task and add completed class
                    $("#task-number-" + command.AffectedTask.Number).addClass("completed-task");
                }
            };
            /* First console */
            var console1 = $('<div class="console1">');
            $('.toolbar').after(console1);
            var controller1 = console1.console({
                welcomeMessage: "Loading personality...[SkyNet]\nWelcome Jaime! It's nice to see you",
                promptLabel: '>> ',
                commandValidate:function(line){
                    if (line == "") return false;
                    else {
                        return true;
                    }
                },
                commandHandle: function (line, report) {
                    // Parse command, perform required actions and prompt
                    $.ajax({
                        url: "@Url.Action("InterpretCommand")",
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ Line: line }),
                        contentType: "application/json; charset=utf-8",
                    }).done(function (command) {
                        // update UI based on command
                        updateUi(command);
                        // show response in console
                        report([{ msg: command.Response, className: "jquery-console-message-value" }]);
                    });
                },
                autofocus:true,
                animateScroll:true,
                promptHistory:true,
                charInsertTrigger:function(keycode,line){
                    return true;
                    // Let you type until you press a-z
                    // Never allow zero.
                    // return !line.match(/[a-z]+/) && keycode != '0'.charCodeAt(0);
                }
            });
        });
      
    </script>
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryconsole")
    @Scripts.Render("~/bundles/jqueryval")
    
}
